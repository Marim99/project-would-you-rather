{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport QuestionCard from './QuestionCard';\nimport { Card, Tab, Row, Col, Nav, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionsList extends Component {\n  render() {\n    const {\n      unanswered,\n      answered\n    } = this.props;\n    console.log(answered);\n    return /*#__PURE__*/_jsxDEV(Tab.Container, {\n      id: \"left-tabs-example\",\n      defaultActiveKey: \"first\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: '30px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            variant: \"pills\",\n            className: \"flex-column\",\n            style: {\n              marginTop: '30px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                variant: \"dark\",\n                eventKey: \"first\",\n                children: \"unanswered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                variant: \"dark\",\n                eventKey: \"second\",\n                children: \"answered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"first\",\n              children: unanswered.map(id => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"li\",\n                style: {\n                  marginTop: '20px'\n                },\n                children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n                  id: id,\n                  isAnswerd: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 37\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 38\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"second\",\n              children: answered.map(id => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"li\",\n                children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n                  id: id,\n                  isAnswerd: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 37,\n                  columnNumber: 35\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 35\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions\n}) {\n  const unanswered = Object.keys(questions).filter(i => !questions[i].optionOne.votes.includes(authedUser) && !questions[i].optionTwo.votes.includes(authedUser)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const answered = Object.keys(questions).filter(i => questions[i].optionOne.votes.includes(authedUser) || questions[i].optionTwo.votes.includes(authedUser)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    unanswered,\n    answered\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionsList);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionsList.js"],"names":["React","Component","connect","QuestionCard","Card","Tab","Row","Col","Nav","ListGroup","QuestionsList","render","unanswered","answered","props","console","log","marginTop","map","id","mapStateToProps","authedUser","questions","Object","keys","filter","i","optionOne","votes","includes","optionTwo","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React ,{ Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport QuestionCard from './QuestionCard';\r\nimport { Card ,Tab,Row,Col,Nav,ListGroup} from \"react-bootstrap\";\r\nclass QuestionsList extends Component {\r\n   \r\n    render() { \r\n        const {unanswered,answered} = this.props\r\n        console.log(answered)\r\n        return  (\r\n     <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n         <Row style={{marginTop:'30px'}}>\r\n        <Col sm={3}>\r\n        <Nav variant=\"pills\" className=\"flex-column\" style={{marginTop:'30px'}}>\r\n            <Nav.Item>\r\n            <Nav.Link variant=\"dark\" eventKey=\"first\">unanswered</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n            <Nav.Link variant=\"dark\" eventKey=\"second\">answered</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n        </Col>\r\n        <Col sm={9}>\r\n        <Tab.Content>\r\n            <Tab.Pane eventKey=\"first\">\r\n                            { unanswered.map((id) => (\r\n                                     <ListGroup.Item as=\"li\"key={id}style={{marginTop:'20px'}}>\r\n                                    <QuestionCard id={id} isAnswerd={true}/>\r\n                                    </ListGroup.Item>\r\n                               \r\n                            ))}  \r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"second\">\r\n               \r\n                            { answered.map((id) => (\r\n                                  <ListGroup.Item as=\"li\"key={id}>\r\n                                  <QuestionCard id={id} isAnswerd={false}/>\r\n                                  </ListGroup.Item>\r\n                            ))}\r\n                    \r\n            </Tab.Pane>\r\n        </Tab.Content>\r\n        </Col>\r\n    </Row>\r\n    </Tab.Container>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n function mapStateToProps ({authedUser,questions}){\r\n    const unanswered = Object.keys(questions).filter((i)=>(\r\n      !questions[i].optionOne.votes.includes(authedUser)&&\r\n      !questions[i].optionTwo.votes.includes(authedUser)\r\n    )).sort((a,b) => (\r\n        questions[b].timestamp - questions[a].timestamp\r\n    ))\r\n    const answered = Object.keys(questions)\r\n    .filter((i) => (\r\n        questions[i].optionOne.votes.includes(authedUser) ||\r\n        questions[i].optionTwo.votes.includes(authedUser)\r\n    )).sort((a,b) => (\r\n        questions[b].timestamp - questions[a].timestamp\r\n    ))\r\n    return {\r\n        unanswered,\r\n        answered\r\n    }\r\n }\r\nexport default connect(mapStateToProps)(QuestionsList);"]},"metadata":{},"sourceType":"module"}