{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\CardDetails.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Image, Badge, Col, ProgressBar, Button, Form } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap/cjs\";\nimport { withRouter } from \"react-router-dom\";\nimport { handleAddAnswer } from \"../actions/questions\";\nimport { width } from \"dom-helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: \"\"\n    };\n\n    this.handleChange = e => {\n      const selectedOption = e.currentTarget.value;\n      this.setState(() => ({\n        selected: selectedOption\n      }));\n    };\n\n    this.handleVote = e => {\n      e.preventDefault();\n      const {\n        dispatch,\n        authedUser,\n        id\n      } = this.props;\n      const {\n        selected\n      } = this.state;\n      this.props.history.push(\"/\");\n\n      if (selected !== null) {\n        dispatch(handleAddAnswer({\n          authedUser: authedUser,\n          qid: id,\n          answer: selected\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      question,\n      author,\n      id,\n      authedUser\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    const numberVotesOne = optionOne.votes.length;\n    const numberVotesTwo = optionTwo.votes.length;\n    const totalVotes = numberVotesOne + numberVotesTwo;\n    const PercentOne = Math.round(optionOne.votes.length / totalVotes * 100);\n    const PercentTwo = Math.round(optionTwo.votes.length / totalVotes * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarURL,\n            className: \"card-img\",\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), this.props.isAnswered ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"70px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgrounColor: optionOne.votes.includes(authedUser) ? \"#555\" : \"#fff\",\n                width: \"100px\",\n                height: \"50px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n                animated: true,\n                progress: \"percent\",\n                value: numberVotesOne,\n                now: PercentOne,\n                style: {\n                  marginBottom: \"30px\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Span, {\n              style: {\n                backgrounColor: optionTwo.votes.includes(authedUser) ? \"#555\" : \"#fff\",\n                width: \"100px\",\n                height: \"50px\",\n                display: \"inline-block\"\n              },\n              children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n                animated: true,\n                progress: \"percent\",\n                value: numberVotesOne,\n                now: PercentTwo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              marginTop: \"70px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: optionOne.text,\n              name: \"optionOne\",\n              id: \"optionOne\",\n              value: \"optionOne\",\n              checked: this.state.selected === \"optionOne\" ? true : false,\n              style: {\n                marginBottom: \"30px\"\n              },\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: optionTwo.text,\n              name: \"optionTwo\",\n              id: \"optionTwo\",\n              value: \"optionTwo\",\n              checked: this.state.selected === \"optionTwo\" ? true : false,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: this.handleVote,\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const id = props.match.params.id;\n  const question = questions[id];\n  const author = users[question.author];\n  const isAnswered = !!question ? question.optionOne.votes.includes(authedUser) || question.optionTwo.votes.includes(authedUser) : false;\n  return {\n    id,\n    isAnswered,\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(CardDetails);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/CardDetails.js"],"names":["React","Component","Fragment","connect","Image","Badge","Col","ProgressBar","Button","Form","Card","withRouter","handleAddAnswer","width","CardDetails","state","selected","handleChange","e","selectedOption","currentTarget","value","setState","handleVote","preventDefault","dispatch","authedUser","id","props","history","push","qid","answer","render","question","author","optionOne","optionTwo","name","avatarURL","numberVotesOne","votes","length","numberVotesTwo","totalVotes","PercentOne","Math","round","PercentTwo","isAnswered","marginTop","backgrounColor","includes","height","marginBottom","display","text","mapStateToProps","questions","users","match","params"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Image, Badge, Col, ProgressBar, Button, Form } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap/cjs\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\nimport { width } from \"dom-helpers\";\r\n\r\nclass CardDetails extends Component {\r\n  state = {\r\n    selected: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const selectedOption = e.currentTarget.value;\r\n    this.setState(() => ({\r\n      selected: selectedOption,\r\n    }));\r\n  };\r\n  handleVote = (e) => {\r\n    e.preventDefault();\r\n    const { dispatch, authedUser, id } = this.props;\r\n    const { selected } = this.state;\r\n    this.props.history.push(\"/\");\r\n    if (selected !== null) {\r\n      dispatch(\r\n        handleAddAnswer({\r\n          authedUser: authedUser,\r\n          qid: id,\r\n          answer: selected,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    const { question, author, id, authedUser } = this.props;\r\n    const { optionOne, optionTwo } = question;\r\n    const { name, avatarURL } = author;\r\n    const numberVotesOne = optionOne.votes.length;\r\n    const numberVotesTwo = optionTwo.votes.length;\r\n    const totalVotes = numberVotesOne + numberVotesTwo;\r\n    const PercentOne = Math.round((optionOne.votes.length / totalVotes) * 100);\r\n    const PercentTwo = Math.round((optionTwo.votes.length / totalVotes) * 100);\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">{name}</div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img src={avatarURL} className=\"card-img\" alt={name} />\r\n          </div>\r\n          {this.props.isAnswered ? (\r\n            <div className=\"col col-md-4\">\r\n              <div style={{ marginTop: \"70px\" }}>\r\n                <div\r\n                  style={{\r\n                    backgrounColor: optionOne.votes.includes(authedUser)\r\n                      ? \"#555\"\r\n                      : \"#fff\",\r\n                    width: \"100px\",\r\n                    height: \"50px\",\r\n                  }}\r\n                >\r\n                  <ProgressBar\r\n                    animated\r\n                    progress=\"percent\"\r\n                    value={numberVotesOne}\r\n                    now={PercentOne}\r\n                    style={{ marginBottom: \"30px\" }}\r\n                  />\r\n                </div>\r\n                <Span\r\n                  style={{\r\n                    backgrounColor: optionTwo.votes.includes(authedUser)\r\n                      ? \"#555\"\r\n                      : \"#fff\",\r\n                    width: \"100px\",\r\n                    height: \"50px\",\r\n                    display: \"inline-block\",\r\n                  }}\r\n                >\r\n                  <ProgressBar\r\n                    animated\r\n                    progress=\"percent\"\r\n                    value={numberVotesOne}\r\n                    now={PercentTwo}\r\n                  />\r\n                </Span>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"col col-md-4\">\r\n              <Form style={{ marginTop: \"70px\" }}>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label={optionOne.text}\r\n                  name=\"optionOne\"\r\n                  id=\"optionOne\"\r\n                  value=\"optionOne\"\r\n                  checked={this.state.selected === \"optionOne\" ? true : false}\r\n                  style={{ marginBottom: \"30px\" }}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label={optionTwo.text}\r\n                  name=\"optionTwo\"\r\n                  id=\"optionTwo\"\r\n                  value=\"optionTwo\"\r\n                  checked={this.state.selected === \"optionTwo\" ? true : false}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Button type=\"submit\" onClick={this.handleVote}>\r\n                  Vote\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n  const id = props.match.params.id;\r\n  const question = questions[id];\r\n  const author = users[question.author];\r\n  const isAnswered = !!question\r\n    ? question.optionOne.votes.includes(authedUser) ||\r\n      question.optionTwo.votes.includes(authedUser)\r\n    : false;\r\n  return {\r\n    id,\r\n    isAnswered,\r\n    author,\r\n    question,\r\n    authedUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardDetails);\r\n"]},"metadata":{},"sourceType":"module"}