{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport QuestionCard from './QuestionCard';\nimport { Card, Tab, Row, Col, Nav } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionsList extends Component {\n  render() {\n    const {\n      unanswered,\n      answered\n    } = this.props;\n    console.log(answered);\n    return /*#__PURE__*/_jsxDEV(Tab.Container, {\n      id: \"left-tabs-example\",\n      defaultActiveKey: \"first\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            variant: \"pills\",\n            className: \"flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"first\",\n                children: \"unanswered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                eventKey: \"second\",\n                children: \"answered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"first\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: unanswered.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n                    id: id\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 29,\n                    columnNumber: 37\n                  }, this)\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 33\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"second\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 6\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions\n}) {\n  const unanswered = Object.keys(questions).filter(i => !questions[i].optionOne.votes.includes(authedUser) && !questions[i].optionTwo.votes.includes(authedUser));\n  const answered = Object.keys(questions).filter(i => questions[i].optionOne.votes.includes(authedUser) || questions[i].optionTwo.votes.includes(authedUser));\n  return {\n    unanswered,\n    answered\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionsList);\n{\n  /*<div>\r\n     {  <Card >\r\n                      { unanswered.map((id) => (\r\n                          <li key={id} >\r\n                              <QuestionCard id={id}/>\r\n                          </li>\r\n                      ))}\r\n              </Card>}\r\n              guihui\r\n                      </div>*/\n}","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionsList.js"],"names":["React","Component","connect","QuestionCard","Card","Tab","Row","Col","Nav","QuestionsList","render","unanswered","answered","props","console","log","map","id","mapStateToProps","authedUser","questions","Object","keys","filter","i","optionOne","votes","includes","optionTwo"],"mappings":"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","sourcesContent":["import React ,{ Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport QuestionCard from './QuestionCard';\r\nimport { Card ,Tab,Row,Col,Nav} from \"react-bootstrap\";\r\nclass QuestionsList extends Component {\r\n   \r\n    render() { \r\n        const {unanswered,answered} = this.props\r\n        console.log(answered)\r\n        return  (\r\n     <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n         <Row>\r\n        <Col sm={3}>\r\n        <Nav variant=\"pills\" className=\"flex-column\">\r\n            <Nav.Item>\r\n            <Nav.Link eventKey=\"first\">unanswered</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n            <Nav.Link eventKey=\"second\">answered</Nav.Link>\r\n            </Nav.Item>\r\n        </Nav>\r\n        </Col>\r\n        <Col sm={9}>\r\n        <Tab.Content>\r\n            <Tab.Pane eventKey=\"first\">\r\n            <Card >\r\n                            { unanswered.map((id) => (\r\n                                <li key={id} >\r\n                                    <QuestionCard id={id}/>\r\n                                </li>\r\n                            ))}\r\n                    </Card>\r\n            </Tab.Pane>\r\n            <Tab.Pane eventKey=\"second\">\r\n          \r\n            </Tab.Pane>\r\n        </Tab.Content>\r\n        </Col>\r\n    </Row>\r\n    </Tab.Container>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n function mapStateToProps ({authedUser,questions}){\r\n    const unanswered = Object.keys(questions).filter((i)=>(\r\n      !questions[i].optionOne.votes.includes(authedUser)&&\r\n      !questions[i].optionTwo.votes.includes(authedUser)\r\n    ))\r\n    const answered = Object.keys(questions)\r\n    .filter((i) => (\r\n        questions[i].optionOne.votes.includes(authedUser) ||\r\n        questions[i].optionTwo.votes.includes(authedUser)\r\n    ))\r\n    return {\r\n        unanswered,\r\n        answered\r\n    }\r\n }\r\nexport default connect(mapStateToProps)(QuestionsList);\r\n       {/*<div>\r\n           {  <Card >\r\n                            { unanswered.map((id) => (\r\n                                <li key={id} >\r\n                                    <QuestionCard id={id}/>\r\n                                </li>\r\n                            ))}\r\n                    </Card>}\r\n                    guihui\r\n                            </div>*/}"]},"metadata":{},"sourceType":"module"}