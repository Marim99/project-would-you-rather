{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Fragment, Component } from \"react\";\nimport { connect } from 'react-redux';\nimport QuestionCard from './QuestionCard';\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionsList extends Component {\n  render() {\n    const {\n      unanswered,\n      authedUser,\n      questions,\n      users\n    } = this.props;\n    const user = users[authedUser];\n    console.log(user);\n    console.log(unanswered);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"guihui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions\n}) {\n  const unanswered = Object.keys(questions).filter(i => {\n    return !questions[i].optionOne.votes.includes(authedUser) && !questions[i].optionTwo.votes.includes(authedUser);\n  });\n  return {\n    unanswered,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionsList);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionsList.js"],"names":["React","Fragment","Component","connect","QuestionCard","Card","QuestionsList","render","unanswered","authedUser","questions","users","props","user","console","log","mapStateToProps","Object","keys","filter","i","optionOne","votes","includes","optionTwo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AACA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAElCK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,UAAD;AAAYC,MAAAA,UAAZ;AAAuBC,MAAAA,SAAvB;AAAiCC,MAAAA;AAAjC,QAA0C,KAAKC,KAArD;AACA,UAAMC,IAAI,GAAGF,KAAK,CAACF,UAAD,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;AACA,wBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AAYH;;AAnBiC;;AAqBrC,SAASQ,eAAT,CAA0B;AAACP,EAAAA,UAAD;AAAYC,EAAAA;AAAZ,CAA1B,EAAiD;AAC9C,QAAMF,UAAU,GAAGS,MAAM,CAACC,IAAP,CAAYR,SAAZ,EAAuBS,MAAvB,CAA+BC,CAAD,IAAK;AACrD,WAAS,CAACV,SAAS,CAACU,CAAD,CAAT,CAAaC,SAAb,CAAuBC,KAAvB,CAA6BC,QAA7B,CAAsCd,UAAtC,CAAD,IAAoD,CAACC,SAAS,CAACU,CAAD,CAAT,CAAaI,SAAb,CAAuBF,KAAvB,CAA6BC,QAA7B,CAAsCd,UAAtC,CAA9D;AACA,GAFkB,CAAnB;AAGA,SAAO;AACHD,IAAAA,UADG;AAEHC,IAAAA;AAFG,GAAP;AAKF;;AACF,eAAeN,OAAO,CAACa,eAAD,CAAP,CAAyBV,aAAzB,CAAf","sourcesContent":["import React ,{ Fragment,Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport QuestionCard from './QuestionCard';\r\nimport { Card } from \"react-bootstrap\";\r\nclass QuestionsList extends Component {\r\n   \r\n    render() { \r\n        const {unanswered,authedUser,questions,users} = this.props\r\n        const user = users[authedUser]\r\n        console.log(user);\r\n        console.log(unanswered);\r\n        return  (\r\n       <div>\r\n           {/*  <Card >\r\n                            { unanswered.map((id) => (\r\n                                <li key={id} >\r\n                                    <QuestionCard id={id}/>\r\n                                </li>\r\n                            ))}\r\n                    </Card>*/}\r\n                    guihui\r\n       </div>\r\n        );\r\n    }\r\n}\r\n function mapStateToProps ({authedUser,questions}){\r\n    const unanswered = Object.keys(questions).filter((i)=>{\r\n     return   !questions[i].optionOne.votes.includes(authedUser)&&!questions[i].optionTwo.votes.includes(authedUser)\r\n    })\r\n    return {\r\n        unanswered,\r\n        authedUser,\r\n    }\r\n    \r\n }\r\nexport default connect(mapStateToProps)(QuestionsList);"]},"metadata":{},"sourceType":"module"}