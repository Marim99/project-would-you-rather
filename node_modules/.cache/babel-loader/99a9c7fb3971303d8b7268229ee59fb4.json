{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport QuestionCard from './QuestionCard';\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionsList extends Component {\n  render() {\n    const {\n      unanswered,\n      questions\n    } = this.props;\n    console.log(unanswered);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"guihui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions\n}) {\n  const unanswered = Object.keys(questions).filter(i => !questions[i].optionOne.votes.includes(authedUser) && !questions[i].optionTwo.votes.includes(authedUser)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    unanswered\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionsList);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionsList.js"],"names":["React","Component","connect","QuestionCard","Card","QuestionsList","render","unanswered","questions","props","console","log","mapStateToProps","authedUser","Object","keys","filter","i","optionOne","votes","includes","optionTwo","sort","a","b","timestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AACA,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAElCK,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,UAAD;AAAYC,MAAAA;AAAZ,QAAyB,KAAKC,KAApC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACA,wBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AAYH;;AAjBiC;;AAmBrC,SAASK,eAAT,CAA0B;AAACC,EAAAA,UAAD;AAAYL,EAAAA;AAAZ,CAA1B,EAAiD;AAC9C,QAAMD,UAAU,GAAGO,MAAM,CAACC,IAAP,CAAYP,SAAZ,EACdQ,MADc,CACNC,CAAD,IACJ,CAACT,SAAS,CAACS,CAAD,CAAT,CAAaC,SAAb,CAAuBC,KAAvB,CAA6BC,QAA7B,CAAsCP,UAAtC,CAAD,IACA,CAACL,SAAS,CAACS,CAAD,CAAT,CAAaI,SAAb,CAAuBF,KAAvB,CAA6BC,QAA7B,CAAsCP,UAAtC,CAHU,EAKdS,IALc,CAKT,CAACC,CAAD,EAAGC,CAAH,KACFhB,SAAS,CAACgB,CAAD,CAAT,CAAaC,SAAb,GAAyBjB,SAAS,CAACe,CAAD,CAAT,CAAaE,SAN3B,CAAnB;AAQA,SAAO;AACHlB,IAAAA;AADG,GAAP;AAGF;;AACF,eAAeL,OAAO,CAACU,eAAD,CAAP,CAAyBP,aAAzB,CAAf","sourcesContent":["import React ,{ Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport QuestionCard from './QuestionCard';\r\nimport { Card } from \"react-bootstrap\";\r\nclass QuestionsList extends Component {\r\n   \r\n    render() { \r\n        const {unanswered,questions} = this.props\r\n        console.log(unanswered);\r\n        return  (\r\n       <div>\r\n           {/*  <Card >\r\n                            { unanswered.map((id) => (\r\n                                <li key={id} >\r\n                                    <QuestionCard id={id}/>\r\n                                </li>\r\n                            ))}\r\n                    </Card>*/}\r\n                    guihui\r\n       </div>\r\n        );\r\n    }\r\n}\r\n function mapStateToProps ({authedUser,questions}){\r\n    const unanswered = Object.keys(questions)\r\n        .filter((i) => (\r\n            !questions[i].optionOne.votes.includes(authedUser) &&\r\n            !questions[i].optionTwo.votes.includes(authedUser)\r\n        ))\r\n        .sort((a,b) => (\r\n            questions[b].timestamp - questions[a].timestamp\r\n        ))\r\n    return {\r\n        unanswered\r\n    }\r\n }\r\nexport default connect(mapStateToProps)(QuestionsList);"]},"metadata":{},"sourceType":"module"}