{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\CardDetails.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Image, Badge, Col, Row, Button, Form } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap/cjs\";\nimport { withRouter } from \"react-router-dom\";\nimport QuestionCard from \"./QuestionCard\";\nimport { handleAddAnswer } from \"../actions/questions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: \"\"\n    };\n\n    this.handleChange = (e, {\n      value\n    }) => {\n      this.setState({\n        selected: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        dispatch,\n        authedUser,\n        id\n      } = this.props;\n      const {\n        selected\n      } = this.state;\n\n      if (selected !== null) {\n        dispatch(handleAddAnswer({\n          authedUser: authedUser,\n          questionId: id,\n          answer: selected\n        }));\n      }\n    };\n  }\n\n  render() {\n    const {\n      question,\n      author,\n      id\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarURL,\n            className: \"card-img\",\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), this.props.isAnswered ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              marginTop: \"70px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: optionOne.text,\n              name: \"optionOne\",\n              id: \"optionOne\",\n              value: \"optionOne\",\n              checked: this.state.selected === \"optionOne\",\n              style: {\n                marginBottom: \"30px\"\n              },\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: optionTwo.text,\n              name: \"optionTwo\",\n              id: \"optionTwo\",\n              value: \"optionTwo\",\n              checked: this.state.selected === \"optionTwo\",\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: this.handleSubmit,\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const id = props.match.params.id;\n  const question = questions[id];\n  const author = users[question.author];\n  const isAnswered = !!question ? question.optionOne.votes.includes(authedUser) || question.optionTwo.votes.includes(authedUser) : false;\n  return {\n    id,\n    isAnswered,\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(CardDetails);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/CardDetails.js"],"names":["React","Component","Fragment","connect","Image","Badge","Col","Row","Button","Form","Card","withRouter","QuestionCard","handleAddAnswer","CardDetails","state","selected","handleChange","e","value","setState","handleSubmit","preventDefault","dispatch","authedUser","id","props","questionId","answer","render","question","author","optionOne","optionTwo","name","avatarURL","isAnswered","marginTop","text","marginBottom","mapStateToProps","questions","users","match","params","votes","includes"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Image, Badge, Col, Row, Button, Form } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap/cjs\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport QuestionCard from \"./QuestionCard\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\n\r\nclass CardDetails extends Component {\r\n  state = {\r\n    selected: \"\",\r\n  };\r\n\r\n  handleChange = (e, { value }) => {\r\n    this.setState({ selected: value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { dispatch, authedUser, id } = this.props;\r\n    const { selected } = this.state;\r\n\r\n    if (selected !== null) {\r\n      dispatch(\r\n        handleAddAnswer({\r\n          authedUser: authedUser,\r\n          questionId: id,\r\n          answer: selected,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    const { question, author, id } = this.props;\r\n    const { optionOne, optionTwo } = question;\r\n    const { name, avatarURL } = author;\r\n\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">{name}</div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img src={avatarURL} className=\"card-img\" alt={name} />\r\n          </div>\r\n          {this.props.isAnswered ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"col col-md-4\">\r\n              <Form style={{ marginTop: \"70px\" }}>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label={optionOne.text}\r\n                  name=\"optionOne\"\r\n                  id=\"optionOne\"\r\n                  value=\"optionOne\"\r\n                  checked={this.state.selected === \"optionOne\"}\r\n                  style={{ marginBottom: \"30px\" }}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label={optionTwo.text}\r\n                  name=\"optionTwo\"\r\n                  id=\"optionTwo\"\r\n                  value=\"optionTwo\"\r\n                  checked={this.state.selected === \"optionTwo\"}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Button type=\"submit\" onClick={this.handleSubmit}>\r\n                  Vote\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n  const id = props.match.params.id;\r\n  const question = questions[id];\r\n  const author = users[question.author];\r\n  const isAnswered = !!question\r\n    ? question.optionOne.votes.includes(authedUser) ||\r\n      question.optionTwo.votes.includes(authedUser)\r\n    : false;\r\n  return {\r\n    id,\r\n    isAnswered,\r\n    author,\r\n    question,\r\n    authedUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardDetails);\r\n"]},"metadata":{},"sourceType":"module"}