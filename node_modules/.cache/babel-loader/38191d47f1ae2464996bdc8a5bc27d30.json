{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport QuestionsList from './QuestionsList';\nimport Vote from './Vote';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  render() {\n    const {\n      question,\n      id\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          children: [\"  \", /*#__PURE__*/_jsxDEV(QuestionsList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: `/questions/${id}`,\n          exact: true,\n          component: Vote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/Home.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Navbar","QuestionsList","Vote","connect","Home","render","question","id","props","mapStateToProps","questions","users","authedUser","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAiCC,MAAjC,EAAwCC,KAAxC,QAAqD,kBAArD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,IAAN,SAAmBT,SAAnB,CAA6B;AACzBU,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA;AAAV,QAAgB,KAAKC,KAA3B;AACA,wBACG,QAAC,MAAD;AAAA,8BACK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADL,eAEK,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAA,wCAAS,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,kBAAT;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAG,cAAaD,EAAG,EAA9B;AAAiC,UAAA,KAAK,MAAtC;AAAuC,UAAA,SAAS,EAAEL;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AASH;;AAZwB;;AAc7B,SAASO,eAAT,CAA0B;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAmBC,EAAAA;AAAnB,CAA1B,EAA2D;AAAEL,EAAAA;AAAF,CAA3D,EAAmE;AAC/D,QAAMD,QAAQ,GAAGI,SAAS,CAACH,EAAD,CAA1B;AACA,QAAMM,MAAM,GAAGF,KAAK,CAACL,QAAQ,CAACO,MAAV,CAApB;AACA,SAAO;AACJA,IAAAA,MADI;AAEJP,IAAAA,QAFI;AAGJM,IAAAA;AAHI,GAAP;AAKD;;AACH,eAAeT,OAAO,CAACM,eAAD,CAAP,CAAyBL,IAAzB,CAAf","sourcesContent":["import React, { Component} from 'react';\r\nimport { BrowserRouter as Router,Switch,Route } from 'react-router-dom';\r\nimport Navbar from './Navbar' ;\r\nimport QuestionsList from './QuestionsList';\r\nimport Vote from './Vote';\r\nimport { connect } from 'react-redux'\r\n\r\nclass Home extends Component {\r\n    render() { \r\n        const {question,id} = this.props\r\n        return (\r\n           <Router>\r\n                <Navbar/>\r\n                <Switch>\r\n                  <Route>  <QuestionsList/></Route> \r\n                  <Route path={`/questions/${id}`} exact component={Vote}/> \r\n                </Switch>\r\n           </Router>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps ({ questions, users,authedUser }, { id }) {\r\n    const question = questions[id]\r\n    const author = users[question.author]\r\n    return {\r\n       author,\r\n       question,\r\n       authedUser\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(Home);"]},"metadata":{},"sourceType":"module"}