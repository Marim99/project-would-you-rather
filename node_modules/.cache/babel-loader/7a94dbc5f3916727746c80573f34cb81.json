{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Fragment } from \"react\";\nimport { connect } from 'react-redux';\nimport QuestionCard from './QuestionCard';\nimport { Card } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionsList extends React.Component {\n  render() {\n    const {\n      unanswered\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: unanswered.map(id => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n            id: id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 37\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions\n}) {\n  const unanswered = Object.keys(questions).filter(question => !questions[question].optionOne.votes.includes(authedUser) && !questions[question].optionTwo.votes.includes(authedUser));\n  return {\n    unanswered\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionsList);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionsList.js"],"names":["React","Fragment","connect","QuestionCard","Card","QuestionsList","Component","render","unanswered","props","map","id","mapStateToProps","authedUser","questions","Object","keys","filter","question","optionOne","votes","includes","optionTwo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AACA,MAAMC,aAAN,SAA4BL,KAAK,CAACM,SAAlC,CAA4C;AACxCC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA;AAAD,QAAe,KAAKC,KAA1B;AAEA,wBACD;AAAA,6BACO,QAAC,IAAD;AAAA,kBACgBD,UAAU,CAACE,GAAX,CAAgBC,EAAD,iBACb;AAAA,iCACI,QAAC,YAAD;AAAc,YAAA,EAAE,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADJ,WAASA,EAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AADhB;AAAA;AAAA;AAAA;AAAA;AADP;AAAA;AAAA;AAAA;AAAA,YADC;AAWH;;AAfuC;;AAiB3C,SAASC,eAAT,CAA0B;AAACC,EAAAA,UAAD;AAAYC,EAAAA;AAAZ,CAA1B,EAAiD;AAC9C,QAAMN,UAAU,GAAGO,MAAM,CAACC,IAAP,CAAYF,SAAZ,EAAuBG,MAAvB,CAA+BC,QAAD,IAC7C,CAACJ,SAAS,CAACI,QAAD,CAAT,CAAoBC,SAApB,CAA8BC,KAA9B,CAAoCC,QAApC,CAA6CR,UAA7C,CAAD,IAA2D,CAACC,SAAS,CAACI,QAAD,CAAT,CAAoBI,SAApB,CAA8BF,KAA9B,CAAoCC,QAApC,CAA6CR,UAA7C,CAD7C,CAAnB;AAGA,SAAO;AACHL,IAAAA;AADG,GAAP;AAIF;;AACF,eAAeN,OAAO,CAACU,eAAD,CAAP,CAAyBP,aAAzB,CAAf","sourcesContent":["import React ,{ Fragment } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport QuestionCard from './QuestionCard';\r\nimport { Card } from \"react-bootstrap\";\r\nclass QuestionsList extends React.Component {\r\n    render() { \r\n        const {unanswered} = this.props\r\n \r\n        return  (\r\n       <div>\r\n           {  <Card >\r\n                            { unanswered.map((id) => (\r\n                                <li key={id} >\r\n                                    <QuestionCard id={id}/>\r\n                                </li>\r\n                            ))}\r\n                    </Card>}\r\n       </div>\r\n        );\r\n    }\r\n}\r\n function mapStateToProps ({authedUser,questions}){\r\n    const unanswered = Object.keys(questions).filter((question)=>(\r\n        !questions[question].optionOne.votes.includes(authedUser)&&!questions[question].optionTwo.votes.includes(authedUser)\r\n    ))\r\n    return {\r\n        unanswered,\r\n        \r\n    }\r\n }\r\nexport default connect(mapStateToProps)(QuestionsList);"]},"metadata":{},"sourceType":"module"}