{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\Vote.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Vote extends Component {\n  render() {\n    const {\n      question,\n      author,\n      id\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-secondary text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          style: {\n            width: '75px',\n            height: '130px',\n            backgrounColor: '#fff'\n          },\n          rounded: true,\n          src: avatarURL !== 'undefined' ? avatarURL : 'logo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(Vote);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/Vote.js"],"names":["React","Component","Fragment","connect","Vote","render","question","author","id","props","optionOne","optionTwo","name","avatarURL","width","height","backgrounColor","mapStateToProps","questions","users","authedUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAEzBI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA,MAAV;AAAiBC,MAAAA;AAAjB,QAAuB,KAAKC,KAAlC;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2BL,QAAjC;AACN,UAAM;AAAEM,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsBN,MAA5B;AACM,wBACA,QAAC,QAAD;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA,gCACA,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAaK;AAAb;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAC,MAAR;AAAeC,YAAAA,MAAM,EAAC,OAAtB;AAA8BC,YAAAA,cAAc,EAAC;AAA7C,WAAd;AAAoE,UAAA,OAAO,MAA3E;AAA4E,UAAA,GAAG,EAAEH,SAAS,KAAI,WAAb,GAA2BA,SAA3B,GAAuC;AAAxH;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAQH;;AAdwB;;AAgB7B,SAASI,eAAT,CAA0B;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAmBC,EAAAA;AAAnB,CAA1B,EAA2D;AAAEZ,EAAAA;AAAF,CAA3D,EAAmE;AAC/D,QAAMF,QAAQ,GAAGY,SAAS,CAACV,EAAD,CAA1B;AACA,QAAMD,MAAM,GAAGY,KAAK,CAACb,QAAQ,CAACC,MAAV,CAApB;AACA,SAAO;AACJA,IAAAA,MADI;AAEJD,IAAAA,QAFI;AAGJc,IAAAA;AAHI,GAAP;AAKD;;AACH,eAAejB,OAAO,CAACc,eAAD,CAAP,CAAyBb,IAAzB,CAAf","sourcesContent":["import React, { Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Vote extends Component {\r\n\r\n    render() { \r\n        const {question,author,id} = this.props\r\n        const { optionOne, optionTwo } = question;\r\n\t\tconst { name, avatarURL } = author;\r\n        return (\r\n        <Fragment>\r\n        <Card className=\"bg-secondary text-white\">\r\n        <Card.Title>{name}</Card.Title>\r\n        <Image style={{ width:'75px',height:'130px',backgrounColor:'#fff'}} rounded src={avatarURL!== 'undefined' ? avatarURL : 'logo'}/>\r\n        </Card>\r\n         </Fragment>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps ({ questions, users,authedUser }, { id }) {\r\n    const question = questions[id]\r\n    const author = users[question.author]\r\n    return {\r\n       author,\r\n       question,\r\n       authedUser\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(Vote);"]},"metadata":{},"sourceType":"module"}