{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Image, Badge, Col, Row, Button } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap/cjs';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handle = (e, id) => {\n      e.preventDefault();\n      this.props.history.push(`/questions/${id}`);\n    };\n  }\n\n  render() {\n    const {\n      question,\n      author,\n      id\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 3,\n          className: \"g-4\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: \"bg-secondary text-white\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(Image, {\n                style: {\n                  width: '75px',\n                  height: '130px',\n                  backgrounColor: '#fff'\n                },\n                rounded: true,\n                src: avatarURL !== 'undefined' ? avatarURL : 'logo'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              style: {\n                padding: '15px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                style: {\n                  fontSize: '25px',\n                  fontWeight: 'bold'\n                },\n                children: [\"Would you rather \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  children: \"!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 38\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-muted\",\n                children: optionOne.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                bg: \"secondary\",\n                children: \"OR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                className: \"text-muted\",\n                children: optionTwo.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 9\n              }, this), this.props.isAnswerd ? /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark\",\n                onClick: e => this.handle(e, id),\n                children: /*#__PURE__*/_jsxDEV(Card.Link, {\n                  to: `/questions/${id}`,\n                  style: {\n                    color: '#fff',\n                    textDecoration: 'none'\n                  },\n                  children: \" View and Vote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 66\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 9\n              }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"dark\",\n                children: /*#__PURE__*/_jsxDEV(Card.Link, {\n                  to: \"/about\",\n                  style: {\n                    color: '#fff',\n                    textDecoration: 'none'\n                  },\n                  children: \" View Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 32\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(QuestionCard));","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionCard.js"],"names":["React","Component","Fragment","Image","Badge","Col","Row","Button","Card","connect","withRouter","Link","QuestionCard","handle","e","id","preventDefault","props","history","push","render","question","author","optionOne","optionTwo","name","avatarURL","width","height","backgrounColor","padding","fontSize","fontWeight","text","isAnswerd","color","textDecoration","mapStateToProps","questions","users","authedUser"],"mappings":"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","sourcesContent":["import React, { Component,Fragment} from 'react'\r\nimport { Image,Badge,Col,Row, Button } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap/cjs';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter} from 'react-router-dom'\r\nimport { Link} from 'react-router-dom'\r\nclass QuestionCard extends Component {\r\nhandle=(e,id)=>{\r\n    e.preventDefault()\r\n    \r\n  this.props.history.push(`/questions/${id}`)\r\n    \r\n}\r\n\r\nrender() { \r\n    const {question,author,id} = this.props\r\n    const { optionOne, optionTwo } = question;\r\n    const { name, avatarURL } = author;\r\n    return (\r\n        <Fragment>\r\n            <Link >\r\n    <Row xs={1} md={3} className=\"g-4\">\r\n    <Col>\r\n    <Card className=\"bg-secondary text-white\">\r\n    <Card.Title>{name}</Card.Title>\r\n    <Image style={{ width:'75px',height:'130px',backgrounColor:'#fff'}} rounded src={avatarURL!== 'undefined' ? avatarURL : 'logo'}/>\r\n    </Card>\r\n    </Col>\r\n    <Col>\r\n    {<Card style={{ padding:'15px'}}>\r\n        <Card.Text style={{ fontSize:'25px',fontWeight:'bold'}}>\r\n            \r\n                    Would you rather <Badge bg=\"secondary\">!</Badge>\r\n            \r\n        </Card.Text>\r\n        <Card.Text className=\"text-muted\">{optionOne.text}</Card.Text>\r\n        <small bg=\"secondary\">OR</small>\r\n        <Card.Text className=\"text-muted\">{optionTwo.text}</Card.Text>\r\n        \r\n        {this.props.isAnswerd ?\r\n        \r\n        <Button variant=\"dark\" onClick={(e)=>this.handle(e,id)} ><Card.Link  to={`/questions/${id}`} style={{ color:'#fff' , textDecoration: 'none'}}> View and Vote</Card.Link></Button>:\r\n        <Button variant=\"dark\"><Card.Link to=\"/about\" style={{ color:'#fff' , textDecoration: 'none'}}> View Answer</Card.Link></Button>}  \r\n    </Card>  \r\n    }\r\n    </Col>\r\n    </Row>\r\n    </Link>\r\n        </Fragment>\r\n\r\n    );\r\n    }\r\n}\r\nfunction mapStateToProps ({ questions, users,authedUser }, { id }) {\r\n    const question = questions[id]\r\n    const author = users[question.author]\r\n    return {\r\n       author,\r\n       question,\r\n       authedUser\r\n    }\r\n  }\r\nexport default  withRouter (connect(mapStateToProps)(QuestionCard));"]},"metadata":{},"sourceType":"module"}