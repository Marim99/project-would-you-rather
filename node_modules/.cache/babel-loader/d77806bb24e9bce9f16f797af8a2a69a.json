{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport QuestionCard from './QuestionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionsList extends Component {\n  render() {\n    const {\n      unanswered,\n      answered\n    } = this.props;\n    console.log(answered);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"guihui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  question\n}) {\n  const unanswered = Object.keys(question).filter(i => !question[i].optionOne.votes.includes(authedUser) && !question[i].optionTwo.votes.includes(authedUser));\n  const answered = Object.keys(question).filter(i => question[i].optionOne.votes.includes(authedUser) || question[i].optionTwo.votes.includes(authedUser));\n  return {\n    unanswered,\n    answered,\n    test\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionsList);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionsList.js"],"names":["React","Component","connect","QuestionCard","QuestionsList","render","unanswered","answered","props","console","log","mapStateToProps","authedUser","question","Object","keys","filter","i","optionOne","votes","includes","optionTwo","test"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AACA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAElCI,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,UAAD;AAAYC,MAAAA;AAAZ,QAAwB,KAAKC,KAAnC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACA,wBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AAYH;;AAjBiC;;AAmBrC,SAASI,eAAT,CAA0B;AAACC,EAAAA,UAAD;AAAYC,EAAAA;AAAZ,CAA1B,EAAgD;AAC7C,QAAMP,UAAU,GAAGQ,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAAsBG,MAAtB,CAA8BC,CAAD,IAC9C,CAACJ,QAAQ,CAACI,CAAD,CAAR,CAAYC,SAAZ,CAAsBC,KAAtB,CAA4BC,QAA5B,CAAqCR,UAArC,CAAD,IACA,CAACC,QAAQ,CAACI,CAAD,CAAR,CAAYI,SAAZ,CAAsBF,KAAtB,CAA4BC,QAA5B,CAAqCR,UAArC,CAFgB,CAAnB;AAIA,QAAML,QAAQ,GAAGO,MAAM,CAACC,IAAP,CAAYF,QAAZ,EAChBG,MADgB,CACRC,CAAD,IACJJ,QAAQ,CAACI,CAAD,CAAR,CAAYC,SAAZ,CAAsBC,KAAtB,CAA4BC,QAA5B,CAAqCR,UAArC,KACAC,QAAQ,CAACI,CAAD,CAAR,CAAYI,SAAZ,CAAsBF,KAAtB,CAA4BC,QAA5B,CAAqCR,UAArC,CAHa,CAAjB;AAKA,SAAO;AACHN,IAAAA,UADG;AAEHC,IAAAA,QAFG;AAEMe,IAAAA;AAFN,GAAP;AAIF;;AACF,eAAepB,OAAO,CAACS,eAAD,CAAP,CAAyBP,aAAzB,CAAf","sourcesContent":["import React ,{ Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport QuestionCard from './QuestionCard';\r\nclass QuestionsList extends Component {\r\n   \r\n    render() { \r\n        const {unanswered,answered} = this.props\r\n        console.log(answered)\r\n        return  (\r\n       <div>\r\n           {/*  <Card >\r\n                            { unanswered.map((id) => (\r\n                                <li key={id} >\r\n                                    <QuestionCard id={id}/>\r\n                                </li>\r\n                            ))}\r\n                    </Card>*/}\r\n                    guihui\r\n       </div>\r\n        );\r\n    }\r\n}\r\n function mapStateToProps ({authedUser,question}){\r\n    const unanswered = Object.keys(question).filter((i)=>(\r\n      !question[i].optionOne.votes.includes(authedUser)&&\r\n      !question[i].optionTwo.votes.includes(authedUser)\r\n    ))\r\n    const answered = Object.keys(question)\r\n    .filter((i) => (\r\n        question[i].optionOne.votes.includes(authedUser) ||\r\n        question[i].optionTwo.votes.includes(authedUser)\r\n    ))\r\n    return {\r\n        unanswered,\r\n        answered,test\r\n    }\r\n }\r\nexport default connect(mapStateToProps)(QuestionsList);"]},"metadata":{},"sourceType":"module"}