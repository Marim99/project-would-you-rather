{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionsList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport QuestionCard from \"./QuestionCard\";\nimport { Tab, Row, Col, Nav, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionsList extends Component {\n  render() {\n    const {\n      unanswered,\n      answered\n    } = this.props;\n    console.log(answered);\n    return /*#__PURE__*/_jsxDEV(Tab.Container, {\n      id: \"left-tabs-example\",\n      defaultActiveKey: \"first\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          marginTop: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          sm: 3,\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            variant: \"pills\",\n            className: \"flex-column\",\n            style: {\n              marginTop: \"30px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                variant: \"dark\",\n                eventKey: \"first\",\n                children: \"unanswered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 19,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Item, {\n              children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n                variant: \"dark\",\n                eventKey: \"second\",\n                children: \"answered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: 9,\n          children: /*#__PURE__*/_jsxDEV(Tab.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"first\",\n              children: unanswered.map(id => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"li\",\n                style: {\n                  marginTop: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n                  id: id,\n                  isAnswerd: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 21\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Tab.Pane, {\n              eventKey: \"second\",\n              children: answered.map(id => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                as: \"li\",\n                style: {\n                  marginTop: \"20px\"\n                },\n                children: /*#__PURE__*/_jsxDEV(QuestionCard, {\n                  id: id,\n                  isAnswerd: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 21\n                }, this)\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions\n}) {\n  const unanswered = Object.keys(questions).filter(i => !questions[i].optionOne.votes.includes(authedUser) && !questions[i].optionTwo.votes.includes(authedUser)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const answered = Object.keys(questions).filter(i => questions[i].optionOne.votes.includes(authedUser) || questions[i].optionTwo.votes.includes(authedUser)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    unanswered,\n    answered\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionsList);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionsList.js"],"names":["React","Component","connect","QuestionCard","Tab","Row","Col","Nav","ListGroup","QuestionsList","render","unanswered","answered","props","console","log","marginTop","map","id","mapStateToProps","authedUser","questions","Object","keys","filter","i","optionOne","votes","includes","optionTwo","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport QuestionCard from \"./QuestionCard\";\r\nimport { Tab, Row, Col, Nav, ListGroup } from \"react-bootstrap\";\r\nclass QuestionsList extends Component {\r\n  render() {\r\n    const { unanswered, answered } = this.props;\r\n    console.log(answered);\r\n    return (\r\n      <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"first\">\r\n        <Row style={{ marginTop: \"30px\" }}>\r\n          <Col sm={3}>\r\n            <Nav\r\n              variant=\"pills\"\r\n              className=\"flex-column\"\r\n              style={{ marginTop: \"30px\" }}\r\n            >\r\n              <Nav.Item>\r\n                <Nav.Link variant=\"dark\" eventKey=\"first\">\r\n                  unanswered\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link variant=\"dark\" eventKey=\"second\">\r\n                  answered\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </Col>\r\n          <Col sm={9}>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey=\"first\">\r\n                {unanswered.map((id) => (\r\n                  <ListGroup.Item\r\n                    as=\"li\"\r\n                    key={id}\r\n                    style={{ marginTop: \"20px\" }}\r\n                  >\r\n                    <QuestionCard id={id} isAnswerd={true} />\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey=\"second\">\r\n                {answered.map((id) => (\r\n                  <ListGroup.Item\r\n                    as=\"li\"\r\n                    key={id}\r\n                    style={{ marginTop: \"20px\" }}\r\n                  >\r\n                    <QuestionCard id={id} isAnswerd={false} />\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Col>\r\n        </Row>\r\n      </Tab.Container>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ authedUser, questions }) {\r\n  const unanswered = Object.keys(questions)\r\n    .filter(\r\n      (i) =>\r\n        !questions[i].optionOne.votes.includes(authedUser) &&\r\n        !questions[i].optionTwo.votes.includes(authedUser),\r\n    )\r\n    .sort((a, b) => questions[b].timestamp - questions[a].timestamp);\r\n  const answered = Object.keys(questions)\r\n    .filter(\r\n      (i) =>\r\n        questions[i].optionOne.votes.includes(authedUser) ||\r\n        questions[i].optionTwo.votes.includes(authedUser),\r\n    )\r\n    .sort((a, b) => questions[b].timestamp - questions[a].timestamp);\r\n  return {\r\n    unanswered,\r\n    answered,\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(QuestionsList);\r\n"]},"metadata":{},"sourceType":"module"}