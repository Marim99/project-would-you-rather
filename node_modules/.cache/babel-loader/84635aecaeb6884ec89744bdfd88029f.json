{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\CardVote.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Image, Badge, Col, Row, Button } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap/cjs';\nimport { withRouter } from 'react-router-dom';\nimport QuestionCard from './QuestionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardVote extends Component {\n  render() {\n    const {\n      id,\n      users\n    } = this.props;\n\n    if (questionExists) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"card-header\",\n          children: \"hhh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row no-gutters\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-12\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: users.avatarURL,\n                className: \"card-img\",\n                alt: `Avatar of ${users.name}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"username\",\n                children: users.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-8\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this);\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const id = props.match.params.id;\n  return {\n    id,\n    authedUser,\n    questions,\n    users\n  };\n}\n\nexport default connect(mapStateToProps)(CardVote);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/CardVote.js"],"names":["React","Component","Fragment","connect","Image","Badge","Col","Row","Button","Card","withRouter","QuestionCard","CardVote","render","id","users","props","questionExists","avatarURL","name","mapStateToProps","authedUser","questions","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAeC,KAAf,EAAqBC,GAArB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAE7BY,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAgB,KAAKC,KAA3B;;AACA,QAAGC,cAAH,EAAkB;AAChB,0BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AACE,gBAAA,GAAG,EAAEF,KAAK,CAACG,SADb;AAEE,gBAAA,SAAS,EAAC,UAFZ;AAGE,gBAAA,GAAG,EAAG,aAAYH,KAAK,CAACI,IAAK;AAH/B;AAAA;AAAA;AAAA;AAAA,sBADF,eAMI;AAAG,gBAAA,SAAS,EAAC,UAAb;AAAA,0BACGJ,KAAK,CAACI;AADT;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAK,YAAA,SAAS,EAAC,UAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAqCG;AAEN;;AA5C4B;;AA+C/B,SAASC,eAAT,CAA0B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBP,EAAAA;AAAzB,CAA1B,EAA4DC,KAA5D,EAAmE;AACjE,QAAMF,EAAE,GAAGE,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBV,EAA9B;AACA,SAAO;AACLA,IAAAA,EADK;AAELO,IAAAA,UAFK;AAGLC,IAAAA,SAHK;AAGKP,IAAAA;AAHL,GAAP;AAKD;;AAED,eAAeZ,OAAO,CAACiB,eAAD,CAAP,CAAyBR,QAAzB,CAAf","sourcesContent":["import React, { Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Image,Badge,Col,Row, Button } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap/cjs';\r\nimport { withRouter } from 'react-router-dom'\r\nimport QuestionCard from './QuestionCard';\r\n\r\nclass CardVote extends Component {\r\n\r\n    render() {\r\n      const { id, users } = this.props\r\n      if(questionExists){\r\n        return(\r\n            <div className='card mb-12'>\r\n              <h5 className='card-header'>\r\n                hhh\r\n              </h5>\r\n              <div className='row no-gutters'>\r\n                <div className='col-md-4'>\r\n                  <div className='col-md-12'>\r\n                    <img\r\n                      src={users.avatarURL}\r\n                      className='card-img'\r\n                      alt={`Avatar of ${users.name}`}\r\n                      />\r\n                      <p className='username'>\r\n                        {users.name}\r\n                      </p>\r\n                  </div>\r\n                </div>\r\n                <div className='col-md-8'>\r\n                  <div className='card-body'>\r\n                    {/*isAnswered && (\r\n                      <QuestionDetailItemResult\r\n                        question={question}\r\n                        vote={vote}\r\n                        />\r\n                    )}\r\n                    {!isAnswered && (\r\n                      <QuestionDetailItemVote\r\n                        question={question}\r\n                        saveQuestionAnswer = {this.saveQuestionAnswer}\r\n                        />\r\n                    )*/}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            )\r\n          }\r\n    \r\n    }\r\n  }\r\n  \r\n  function mapStateToProps ({ authedUser, questions, users }, props) {\r\n    const id = props.match.params.id\r\n    return {\r\n      id,\r\n      authedUser,\r\n      questions,users\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(CardVote);"]},"metadata":{},"sourceType":"module"}