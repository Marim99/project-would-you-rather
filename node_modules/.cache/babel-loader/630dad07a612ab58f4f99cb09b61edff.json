{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\CardVote.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Image, Badge, Col, Row, Button } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap/cjs';\nimport { withRouter } from 'react-router-dom';\nimport QuestionCard from './QuestionCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardVote extends Component {\n  render() {\n    const {\n      question,\n      author,\n      id\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarURL,\n            className: \"card-img\",\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), true ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"vehicle1\",\n            name: \"vehicle1\",\n            value: \"Bike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"vehicle1\",\n            children: [\" \", optionOne]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: \"vehicle1\",\n            name: \"vehicle1\",\n            value: \"Bike\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"vehicle1\",\n            children: [\" \", optionTwo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this) : 'none']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, props) {\n  const id = props.match.params.id;\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    id,\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(CardVote);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/CardVote.js"],"names":["React","Component","Fragment","connect","Image","Badge","Col","Row","Button","Card","withRouter","QuestionCard","CardVote","render","question","author","id","props","optionOne","optionTwo","name","avatarURL","mapStateToProps","authedUser","questions","users","match","params"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAeC,KAAf,EAAqBC,GAArB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAE7BY,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA,MAAV;AAAiBC,MAAAA;AAAjB,QAAuB,KAAKC,KAAlC;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2BL,QAAjC;AACA,UAAM;AAAEM,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsBN,MAA5B;AAEE,wBACC;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBACGK;AADH;AAAA;AAAA;AAAA;AAAA,cADD,eAIC;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,iCACA;AACM,YAAA,GAAG,EAAEC,SADX;AAEM,YAAA,SAAS,EAAC,UAFhB;AAGM,YAAA,GAAG,EAAED;AAHX;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,EASG,oBAAK;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACN;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,EAAE,EAAC,UAAvB;AAAkC,YAAA,IAAI,EAAC,UAAvC;AAAkD,YAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,kBADM,eAEN;AAAO,YAAA,GAAG,EAAC,UAAX;AAAA,4BAAwBF,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFM,eAEoC;AAAA;AAAA;AAAA;AAAA,kBAFpC,eAGN;AAAO,YAAA,IAAI,EAAC,OAAZ;AAAoB,YAAA,EAAE,EAAC,UAAvB;AAAkC,YAAA,IAAI,EAAC,UAAvC;AAAkD,YAAA,KAAK,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAHM,eAIN;AAAO,YAAA,GAAG,EAAC,UAAX;AAAA,4BAAwBC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJM,eAIoC;AAAA;AAAA;AAAA;AAAA,kBAJpC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,GAMD,MAfF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AA0BH;;AAjC4B;;AAoC/B,SAASG,eAAT,CAA0B;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAA1B,EAA4DR,KAA5D,EAAmE;AACjE,QAAMD,EAAE,GAAGC,KAAK,CAACS,KAAN,CAAYC,MAAZ,CAAmBX,EAA9B;AACA,QAAMF,QAAQ,GAAGU,SAAS,CAACR,EAAD,CAA1B;AACA,QAAMD,MAAM,GAAGU,KAAK,CAACX,QAAQ,CAACC,MAAV,CAApB;AACA,SAAO;AACLC,IAAAA,EADK;AAEJD,IAAAA,MAFI;AAGJD,IAAAA,QAHI;AAIJS,IAAAA;AAJI,GAAP;AAMD;;AAED,eAAepB,OAAO,CAACmB,eAAD,CAAP,CAAyBV,QAAzB,CAAf","sourcesContent":["import React, { Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Image,Badge,Col,Row, Button } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap/cjs';\r\nimport { withRouter } from 'react-router-dom'\r\nimport QuestionCard from './QuestionCard';\r\n\r\nclass CardVote extends Component {\r\n\r\n    render() {\r\n      const {question,author,id} = this.props\r\n      const { optionOne, optionTwo } = question;\r\n      const { name, avatarURL } = author;\r\n     \r\n        return(\r\n         <div className=\"card\">\r\n          <div className=\"card-header\">\r\n            {name}\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col col-md-4\">\r\n            <img\r\n                  src={avatarURL}\r\n                  className='card-img'\r\n                  alt={name}\r\n                  />\r\n             \r\n            </div>\r\n            {true?<div className=\"col col-md-4\">\r\n            <input type=\"radio\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/>\r\n            <label for=\"vehicle1\"> {optionOne}</label><br></br>\r\n            <input type=\"radio\" id=\"vehicle1\" name=\"vehicle1\" value=\"Bike\"/>\r\n            <label for=\"vehicle1\"> {optionTwo}</label><br></br>\r\n            </div>:\r\n            'none'}\r\n          </div>\r\n         </div> \r\n            )\r\n        \r\n    \r\n    }\r\n  }\r\n  \r\n  function mapStateToProps ({ authedUser, questions, users }, props) {\r\n    const id = props.match.params.id\r\n    const question = questions[id];\r\n    const author = users[question.author]\r\n    return {\r\n      id,\r\n       author,\r\n       question,\r\n       authedUser\r\n    }\r\n  }\r\n  \r\n  export default connect(mapStateToProps)(CardVote);"]},"metadata":{},"sourceType":"module"}