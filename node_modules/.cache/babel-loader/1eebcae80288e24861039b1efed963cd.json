{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\CardDetails.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ProgressBar, Button, Form, Badge } from \"react-bootstrap\";\nimport { handleAddAnswer } from \"../actions/questions\";\nimport { Link } from \"react-router-dom\";\nimport NotFound from \"./NotFound\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selected: \"\"\n    };\n\n    this.handleChange = e => {\n      const selectedOption = e.currentTarget.value;\n      this.setState(() => ({\n        selected: selectedOption\n      }));\n    };\n\n    this.handleVote = e => {\n      e.preventDefault();\n      const {\n        dispatch,\n        authedUser,\n        id\n      } = this.props;\n      const {\n        selected\n      } = this.state;\n      this.props.history.push(\"/\");\n\n      if (selected !== null) {\n        dispatch(handleAddAnswer({\n          authedUser: authedUser,\n          qid: id,\n          answer: selected\n        }));\n      }\n    };\n\n    this.style = {\n      height: \"80px\",\n      marginBottom: \"30px\",\n      marginTop: \"20px\",\n      backgroundColor: `${this.props.author.color}`,\n      borderRadius: \"15px\",\n      justifyItems: \"center\",\n      paddingTop: \"20px\"\n    };\n  }\n\n  render() {\n    const {\n      question,\n      author,\n      isError,\n      authedUser\n    } = this.props;\n\n    if (isError) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(NotFound, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this);\n    }\n\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    const numberVotesOne = optionOne.votes.length;\n    const numberVotesTwo = optionTwo.votes.length;\n    const totalVotes = numberVotesOne + numberVotesTwo;\n    const PercentOne = Math.round(optionOne.votes.length / totalVotes * 100);\n    const PercentTwo = Math.round(optionTwo.votes.length / totalVotes * 100);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginRight: \"5px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            style: {\n              color: \"#fff\",\n              textDecoration: \"none\",\n              marginTop: \"0px\"\n            },\n            children: \"Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), name, \" Ask ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-Text\",\n        style: {\n          justifyItems: \"center\",\n          justifyContent: \" center\",\n          display: \"flex\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          style: {\n            fontSize: \"30px\",\n            marginTop: \"15px\"\n          },\n          children: \"Would You Rather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: avatarURL,\n            className: \"card-img\",\n            alt: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), this.props.isAnswered ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: \"70px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-Text\",\n              style: {\n                marginBottom: \"10px\"\n              },\n              children: optionOne.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: optionOne.votes.includes(authedUser) ? this.style : null,\n              children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n                animated: true,\n                progress: \"percent\",\n                value: numberVotesOne,\n                now: PercentOne\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-Text\",\n                style: {\n                  marginBottom: \"10px\"\n                },\n                children: [numberVotesOne, \" from \", totalVotes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: optionTwo.votes.includes(authedUser) ? this.style : null,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-Text\",\n                children: optionTwo.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n                  animated: true,\n                  progress: \"percent\",\n                  value: numberVotesOne,\n                  now: PercentTwo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-Text\",\n                  style: {\n                    marginBottom: \"10px\"\n                  },\n                  children: [numberVotesTwo, \" from \", totalVotes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            style: {\n              marginTop: \"70px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: optionOne.text,\n              name: \"optionOne\",\n              id: \"optionOne\",\n              value: \"optionOne\",\n              checked: this.state.selected === \"optionOne\" ? true : false,\n              style: {\n                marginBottom: \"30px\"\n              },\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: optionTwo.text,\n              name: \"optionTwo\",\n              id: \"optionTwo\",\n              value: \"optionTwo\",\n              checked: this.state.selected === \"optionTwo\" ? true : false,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              onClick: this.handleVote,\n              disabled: this.state.selected === \"\",\n              children: \"Vote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, props) {\n  if (questions[props.match.params.id] === undefined) {\n    const isError = true;\n    return {\n      isError\n    };\n  }\n\n  const id = props.match.params.id;\n  const question = questions[id];\n  const author = users[question.author];\n  const isAnswered = !!question ? question.optionOne.votes.includes(authedUser) || question.optionTwo.votes.includes(authedUser) : false;\n  const isError = false;\n  return {\n    id,\n    isAnswered,\n    author,\n    question,\n    authedUser,\n    isError,\n    users\n  };\n}\n\nexport default connect(mapStateToProps)(CardDetails);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/CardDetails.js"],"names":["React","Component","connect","ProgressBar","Button","Form","Badge","handleAddAnswer","Link","NotFound","CardDetails","state","selected","handleChange","e","selectedOption","currentTarget","value","setState","handleVote","preventDefault","dispatch","authedUser","id","props","history","push","qid","answer","style","height","marginBottom","marginTop","backgroundColor","author","color","borderRadius","justifyItems","paddingTop","render","question","isError","optionOne","optionTwo","name","avatarURL","numberVotesOne","votes","length","numberVotesTwo","totalVotes","PercentOne","Math","round","PercentTwo","marginRight","textDecoration","justifyContent","display","fontSize","isAnswered","text","includes","mapStateToProps","questions","users","match","params","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ProgressBar, Button, Form, Badge } from \"react-bootstrap\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\nclass CardDetails extends Component {\r\n  state = {\r\n    selected: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const selectedOption = e.currentTarget.value;\r\n    this.setState(() => ({\r\n      selected: selectedOption,\r\n    }));\r\n  };\r\n  handleVote = (e) => {\r\n    e.preventDefault();\r\n    const { dispatch, authedUser, id } = this.props;\r\n    const { selected } = this.state;\r\n    this.props.history.push(\"/\");\r\n    if (selected !== null) {\r\n      dispatch(\r\n        handleAddAnswer({\r\n          authedUser: authedUser,\r\n          qid: id,\r\n          answer: selected,\r\n        }),\r\n      );\r\n    }\r\n  };\r\n  // const { name, avatarURL } = author;\r\n  style = {\r\n    height: \"80px\",\r\n    marginBottom: \"30px\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: `${this.props.author.color}`,\r\n    borderRadius: \"15px\",\r\n    justifyItems: \"center\",\r\n    paddingTop: \"20px\",\r\n  };\r\n  render() {\r\n    const { question, author, isError, authedUser } = this.props;\r\n    if (isError) {\r\n      return (\r\n        <div>\r\n          <NotFound />\r\n        </div>\r\n      );\r\n    }\r\n    const { optionOne, optionTwo } = question;\r\n    const { name, avatarURL } = author;\r\n    const numberVotesOne = optionOne.votes.length;\r\n    const numberVotesTwo = optionTwo.votes.length;\r\n    const totalVotes = numberVotesOne + numberVotesTwo;\r\n    const PercentOne = Math.round((optionOne.votes.length / totalVotes) * 100);\r\n    const PercentTwo = Math.round((optionTwo.votes.length / totalVotes) * 100);\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header\">\r\n          {\" \"}\r\n          <Button style={{ marginRight: \"5px\" }}>\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                color: \"#fff\",\r\n                textDecoration: \"none\",\r\n                marginTop: \"0px\",\r\n              }}\r\n            >\r\n              Back\r\n            </Link>\r\n          </Button>\r\n          {name} Ask ?\r\n        </div>\r\n\r\n        <div\r\n          className=\"card-Text\"\r\n          style={{\r\n            justifyItems: \"center\",\r\n            justifyContent: \" center\",\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <Badge bg=\"secondary\" style={{ fontSize: \"30px\", marginTop: \"15px\" }}>\r\n            Would You Rather\r\n          </Badge>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col col-md-4\">\r\n            <img src={avatarURL} className=\"card-img\" alt={name} />\r\n          </div>\r\n          {this.props.isAnswered ? (\r\n            <div className=\"col col-md-4\">\r\n              <div style={{ marginTop: \"70px\" }}>\r\n                <div className=\"card-Text\" style={{ marginBottom: \"10px\" }}>\r\n                  {optionOne.text}\r\n                </div>\r\n                <div\r\n                  style={\r\n                    optionOne.votes.includes(authedUser) ? this.style : null\r\n                  }\r\n                >\r\n                  <ProgressBar\r\n                    animated\r\n                    progress=\"percent\"\r\n                    value={numberVotesOne}\r\n                    now={PercentOne}\r\n                  />\r\n                  <div className=\"card-Text\" style={{ marginBottom: \"10px\" }}>\r\n                    {numberVotesOne} from {totalVotes}\r\n                  </div>\r\n                </div>\r\n\r\n                <div\r\n                  style={\r\n                    optionTwo.votes.includes(authedUser) ? this.style : null\r\n                  }\r\n                >\r\n                  <div className=\"card-Text\">{optionTwo.text}</div>\r\n                  <div>\r\n                    <ProgressBar\r\n                      animated\r\n                      progress=\"percent\"\r\n                      value={numberVotesOne}\r\n                      now={PercentTwo}\r\n                    />\r\n                    <div className=\"card-Text\" style={{ marginBottom: \"10px\" }}>\r\n                      {numberVotesTwo} from {totalVotes}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"col col-md-4\">\r\n              <Form style={{ marginTop: \"70px\" }}>\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label={optionOne.text}\r\n                  name=\"optionOne\"\r\n                  id=\"optionOne\"\r\n                  value=\"optionOne\"\r\n                  checked={this.state.selected === \"optionOne\" ? true : false}\r\n                  style={{ marginBottom: \"30px\" }}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Form.Check\r\n                  type=\"radio\"\r\n                  label={optionTwo.text}\r\n                  name=\"optionTwo\"\r\n                  id=\"optionTwo\"\r\n                  value=\"optionTwo\"\r\n                  checked={this.state.selected === \"optionTwo\" ? true : false}\r\n                  onChange={this.handleChange}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  onClick={this.handleVote}\r\n                  disabled={this.state.selected === \"\"}\r\n                >\r\n                  Vote\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, questions, users }, props) {\r\n  if (questions[props.match.params.id] === undefined) {\r\n    const isError = true;\r\n    return {\r\n      isError,\r\n    };\r\n  }\r\n  const id = props.match.params.id;\r\n  const question = questions[id];\r\n  const author = users[question.author];\r\n  const isAnswered = !!question\r\n    ? question.optionOne.votes.includes(authedUser) ||\r\n      question.optionTwo.votes.includes(authedUser)\r\n    : false;\r\n\r\n  const isError = false;\r\n  return {\r\n    id,\r\n    isAnswered,\r\n    author,\r\n    question,\r\n    authedUser,\r\n    isError,\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardDetails);\r\n"]},"metadata":{},"sourceType":"module"}