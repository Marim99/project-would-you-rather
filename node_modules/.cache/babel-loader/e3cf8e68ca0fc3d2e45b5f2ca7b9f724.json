{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component, Fragment, Link } from 'react';\nimport { Image, Badge, CardGroup, Col, Row, Button } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap/cjs';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionCard extends Component {\n  render() {\n    const {\n      question,\n      author,\n      authedUser,\n      id\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo,\n      timestamp\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 3,\n        className: \"g-4\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"bg-secondary text-white\",\n            style: {},\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              style: {\n                width: '75px',\n                height: '130px',\n                backgrounColor: '#fff'\n              },\n              rounded: true,\n              src: avatarURL !== 'undefined' ? avatarURL : 'logo'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: this.props.isAnswerd && /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Would you rather \", /*#__PURE__*/_jsxDEV(Badge, {\n                  bg: \"secondary\",\n                  children: \"!\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 42\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 23,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              className: \"text-muted\",\n              children: question.optionOne.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Badge, {\n              bg: \"secondary\",\n              children: \"...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              children: \"View\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionCard.js"],"names":["React","Component","Fragment","Link","Image","Badge","CardGroup","Col","Row","Button","Card","connect","QuestionCard","render","question","author","authedUser","id","props","optionOne","optionTwo","timestamp","name","avatarURL","width","height","backgrounColor","isAnswerd","text","mapStateToProps","questions","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,IAAnC,QAA8C,OAA9C;AACA,SAASC,KAAT,EAAeC,KAAf,EAAqBC,SAArB,EAA+BC,GAA/B,EAAmCC,GAAnC,EAAwCC,MAAxC,QAAsD,iBAAtD;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,MAAMC,YAAN,SAA2BX,SAA3B,CAAqC;AAEjCY,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA,MAAV;AAAiBC,MAAAA,UAAjB;AAA4BC,MAAAA;AAA5B,QAAkC,KAAKC,KAA7C;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAsCP,QAA5C;AACN,UAAM;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsBR,MAA5B;AACM,wBACE,QAAC,QAAD;AAAA,6BACH,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAA,gCACA,QAAC,GAAD;AAAA,iCACC,QAAC,IAAD;AAAM,YAAA,SAAS,EAAC,yBAAhB;AAAyC,YAAA,KAAK,EAAE,EAAhD;AAAA,oCACA,QAAC,IAAD,CAAM,KAAN;AAAA,wBAAaO;AAAb;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE;AAAEE,gBAAAA,KAAK,EAAC,MAAR;AAAeC,gBAAAA,MAAM,EAAC,OAAtB;AAA8BC,gBAAAA,cAAc,EAAC;AAA7C,eAAd;AAAoE,cAAA,OAAO,MAA3E;AAA4E,cAAA,GAAG,EAAEH,SAAS,KAAI,WAAb,GAA2BA,SAA3B,GAAuC;AAAxH;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBADA,eAOC,QAAC,GAAD;AAAA,oBACC,KAAKL,KAAL,CAAWS,SAAX,iBAAuB,QAAC,IAAD;AAAA,oCACpB,QAAC,IAAD,CAAM,IAAN;AAAA,qCACI;AAAA,6DACyB,QAAC,KAAD;AAAO,kBAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADzB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADoB,eAMpB,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA,wBAAmCb,QAAQ,CAACK,SAAT,CAAmBS;AAAtD;AAAA;AAAA;AAAA;AAAA,oBANoB,eAOpB,QAAC,KAAD;AAAO,cAAA,EAAE,EAAC,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPoB,eAQpB,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARoB;AAAA;AAAA;AAAA;AAAA;AAAA;AADxB;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,YADF;AA2BH;;AAjCgC;;AAmCrC,SAASC,eAAT,CAA0B;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAmBf,EAAAA;AAAnB,CAA1B,EAA2D;AAAEC,EAAAA;AAAF,CAA3D,EAAmE;AAC/D,QAAMH,QAAQ,GAAGgB,SAAS,CAACb,EAAD,CAA1B;AACA,QAAMF,MAAM,GAAGgB,KAAK,CAACjB,QAAQ,CAACC,MAAV,CAApB;AACA,SAAO;AACJA,IAAAA,MADI;AAEJD,IAAAA,QAFI;AAGJE,IAAAA;AAHI,GAAP;AAKD;;AACH,eAAeL,OAAO,CAACkB,eAAD,CAAP,CAAyBjB,YAAzB,CAAf","sourcesContent":["import React, { Component,Fragment,Link} from 'react'\r\nimport { Image,Badge,CardGroup,Col,Row, Button } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap/cjs';\r\nimport { connect } from 'react-redux'\r\nclass QuestionCard extends Component {\r\n\r\n    render() { \r\n        const {question,author,authedUser,id} = this.props\r\n        const { optionOne, optionTwo, timestamp } = question;\r\n\t\tconst { name, avatarURL } = author;\r\n        return (\r\n          <Fragment>\r\n       <Row xs={1} md={3} className=\"g-4\">\r\n       <Col>\r\n        <Card className=\"bg-secondary text-white\"style={{}}>\r\n        <Card.Title>{name}</Card.Title>\r\n        <Image style={{ width:'75px',height:'130px',backgrounColor:'#fff'}} rounded src={avatarURL!== 'undefined' ? avatarURL : 'logo'}/>\r\n        </Card>\r\n        </Col>\r\n        <Col>\r\n        {this.props.isAnswerd &&<Card >\r\n            <Card.Text>\r\n                <h2>\r\n                        Would you rather <Badge bg=\"secondary\">!</Badge>\r\n               </h2>\r\n            </Card.Text>\r\n            <Card.Text className=\"text-muted\">{question.optionOne.text}</Card.Text>\r\n            <Badge bg=\"secondary\">...</Badge>\r\n            <Button variant=\"dark\">View</Button>\r\n        </Card> \r\n        \r\n        }\r\n        </Col>\r\n        </Row>\r\n         </Fragment>\r\n       \r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps ({ questions, users,authedUser }, { id }) {\r\n    const question = questions[id]\r\n    const author = users[question.author]\r\n    return {\r\n       author,\r\n       question,\r\n       authedUser\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(QuestionCard);"]},"metadata":{},"sourceType":"module"}