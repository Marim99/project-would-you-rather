{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\Vote.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Image, Badge, Col, Row, Button } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap/cjs';\nimport { withRouter } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Vote extends Component {\n  render() {\n    const {\n      question,\n      authorAvatar,\n      match,\n      userName\n    } = this.props;\n    const id = match.params.id;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-secondary text-white\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: this.props.match.params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          style: {\n            width: '75px',\n            height: '130px',\n            backgrounColor: '#fff'\n          },\n          rounded: true,\n          src: authorAvatar !== 'undefined' ? authorAvatar : 'logo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}, {\n  match\n}) {\n  const userName = users[questions[match.params.question_id].author].name;\n  const id = match.params.question_id;\n  const question = questions[id];\n  const authorAvatar = users[question.author].avatarURL;\n  return {\n    id,\n    question,\n    authedUser,\n    userName,\n    authorAvatar\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(Vote));","map":{"version":3,"sources":["D:/FWD/would-you/src/components/Vote.js"],"names":["React","Component","Fragment","connect","Image","Badge","Col","Row","Button","Card","withRouter","Vote","render","question","authorAvatar","match","userName","props","id","params","width","height","backgrounColor","mapStateToProps","authedUser","questions","users","question_id","author","name","avatarURL"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAeC,KAAf,EAAqBC,GAArB,EAAyBC,GAAzB,EAA8BC,MAA9B,QAA4C,iBAA5C;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AACA,MAAMC,IAAN,SAAmBV,SAAnB,CAA6B;AAEzBW,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA,YAAV;AAAuBC,MAAAA,KAAvB;AAA6BC,MAAAA;AAA7B,QAAyC,KAAKC,KAApD;AACA,UAAMC,EAAE,GAAGH,KAAK,CAACI,MAAN,CAAaD,EAAxB;AACA,wBACA,QAAC,QAAD;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,yBAAhB;AAAA,gCACA,QAAC,IAAD,CAAM,KAAN;AAAA,oBAAa,KAAKD,KAAL,CAAWF,KAAX,CAAiBI,MAAjB,CAAwBD;AAArC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE;AAAEE,YAAAA,KAAK,EAAC,MAAR;AAAeC,YAAAA,MAAM,EAAC,OAAtB;AAA8BC,YAAAA,cAAc,EAAC;AAA7C,WAAd;AAAoE,UAAA,OAAO,MAA3E;AAA4E,UAAA,GAAG,EAAER,YAAY,KAAI,WAAhB,GAA8BA,YAA9B,GAA6C;AAA9H;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAQH;;AAbwB;;AAe7B,SAASS,eAAT,CAAyB;AAACC,EAAAA,UAAD;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAzB,EAAwD;AAACX,EAAAA;AAAD,CAAxD,EAAiE;AAE7D,QAAMC,QAAQ,GAAGU,KAAK,CAACD,SAAS,CAACV,KAAK,CAACI,MAAN,CAAaQ,WAAd,CAAT,CAAoCC,MAArC,CAAL,CAAkDC,IAAnE;AACA,QAAMX,EAAE,GAAGH,KAAK,CAACI,MAAN,CAAaQ,WAAxB;AACA,QAAMd,QAAQ,GAAGY,SAAS,CAACP,EAAD,CAA1B;AACA,QAAMJ,YAAY,GAAGY,KAAK,CAACb,QAAQ,CAACe,MAAV,CAAL,CAAuBE,SAA5C;AACA,SAAO;AACHZ,IAAAA,EADG;AAEHL,IAAAA,QAFG;AAGHW,IAAAA,UAHG;AAIHR,IAAAA,QAJG;AAKHF,IAAAA;AALG,GAAP;AAQH;;AAED,eAAeJ,UAAU,CAACP,OAAO,CAACoB,eAAD,CAAP,CAAyBZ,IAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component,Fragment} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Image,Badge,Col,Row, Button } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap/cjs';\r\nimport { withRouter } from 'react-router-dom'\r\nclass Vote extends Component {\r\n\r\n    render() { \r\n        const {question,authorAvatar,match,userName} = this.props\r\n        const id = match.params.id;\r\n        return (\r\n        <Fragment>\r\n        <Card className=\"bg-secondary text-white\">\r\n        <Card.Title>{this.props.match.params.id}</Card.Title>\r\n        <Image style={{ width:'75px',height:'130px',backgrounColor:'#fff'}} rounded src={authorAvatar!== 'undefined' ? authorAvatar : 'logo'}/>\r\n        </Card>\r\n         </Fragment>\r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps({authedUser, questions, users},{match}) {\r\n\r\n    const userName = users[questions[match.params.question_id].author].name\r\n    const id = match.params.question_id\r\n    const question = questions[id]\r\n    const authorAvatar = users[question.author].avatarURL\r\n    return {\r\n        id,\r\n        question,\r\n        authedUser,\r\n        userName,\r\n        authorAvatar,\r\n      \r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps)(Vote));"]},"metadata":{},"sourceType":"module"}