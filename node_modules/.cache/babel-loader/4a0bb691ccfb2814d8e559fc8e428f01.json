{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component, Fragment, Link } from 'react';\nimport { Image, Badge } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap/cjs';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionCard extends Component {\n  render() {\n    const {\n      question,\n      author,\n      authedUser,\n      id\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo,\n      timestamp\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"bg-dark text-white\",\n        children: /*#__PURE__*/_jsxDEV(Card.ImgOverlay, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Card title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"This is a wider card with supporting text below as a natural lead-in to additional content. This content is a little bit longer.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: \"Last updated 3 mins ago\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionCard.js"],"names":["React","Component","Fragment","Link","Image","Badge","Card","connect","QuestionCard","render","question","author","authedUser","id","props","optionOne","optionTwo","timestamp","name","avatarURL","mapStateToProps","questions","users"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,QAA1B,EAAmCC,IAAnC,QAA8C,OAA9C;AACA,SAASC,KAAT,EAAeC,KAAf,QAA4B,iBAA5B;AACA,SAASC,IAAT,QAAqB,qBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;;;AACA,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAEjCQ,EAAAA,MAAM,GAAG;AACL,UAAM;AAACC,MAAAA,QAAD;AAAUC,MAAAA,MAAV;AAAiBC,MAAAA,UAAjB;AAA4BC,MAAAA;AAA5B,QAAkC,KAAKC,KAA7C;AACA,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,SAAb;AAAwBC,MAAAA;AAAxB,QAAsCP,QAA5C;AACN,UAAM;AAAEQ,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAsBR,MAA5B;AACM,wBACE,QAAC,QAAD;AAAA,6BAcF,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,oBAAhB;AAAA,+BACA,QAAC,IAAD,CAAM,UAAN;AAAA,kCACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAdE;AAAA;AAAA;AAAA;AAAA,YADF;AA4BH;;AAlCgC;;AAoCrC,SAASS,eAAT,CAA0B;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAmBV,EAAAA;AAAnB,CAA1B,EAA2D;AAAEC,EAAAA;AAAF,CAA3D,EAAmE;AAC/D,QAAMH,QAAQ,GAAGW,SAAS,CAACR,EAAD,CAA1B;AACA,QAAMF,MAAM,GAAGW,KAAK,CAACZ,QAAQ,CAACC,MAAV,CAApB;AACA,SAAO;AACJA,IAAAA,MADI;AAEJD,IAAAA,QAFI;AAGJE,IAAAA;AAHI,GAAP;AAKD;;AACH,eAAeL,OAAO,CAACa,eAAD,CAAP,CAAyBZ,YAAzB,CAAf","sourcesContent":["import React, { Component,Fragment,Link} from 'react'\r\nimport { Image,Badge } from 'react-bootstrap';\r\nimport { Card } from 'react-bootstrap/cjs';\r\nimport { connect } from 'react-redux'\r\nclass QuestionCard extends Component {\r\n\r\n    render() { \r\n        const {question,author,authedUser,id} = this.props\r\n        const { optionOne, optionTwo, timestamp } = question;\r\n\t\tconst { name, avatarURL } = author;\r\n        return (\r\n          <Fragment>\r\n          {/*  <Card  style={{width:'150px',height:'150px'}}>\r\n                <div className=\"question-container\">\r\n                 <Card.Body>\r\n                 <Card.Title>{name}</Card.Title>    \r\n                <Image style={{ width:'75px',height:'75px',backgrounColor:'#fff'}} rounded src={avatarURL!== 'undefined' ? avatarURL : 'logo'}/>\r\n               </Card.Body>\r\n               </div>\r\n               <div className='justify-content-center'>\r\n               <h2>\r\n                        Would you rather <Badge bg=\"secondary\">!</Badge>\r\n               </h2>\r\n                </div>\r\n        </Card> */}\r\n        <Card className=\"bg-dark text-white\">\r\n        <Card.ImgOverlay>\r\n            <Card.Title>Card title</Card.Title>\r\n            <Card.Text>\r\n            This is a wider card with supporting text below as a natural lead-in to\r\n            additional content. This content is a little bit longer.\r\n            </Card.Text>\r\n            <Card.Text>Last updated 3 mins ago</Card.Text>\r\n        </Card.ImgOverlay>\r\n        </Card>\r\n         </Fragment>\r\n       \r\n        );\r\n    }\r\n}\r\nfunction mapStateToProps ({ questions, users,authedUser }, { id }) {\r\n    const question = questions[id]\r\n    const author = users[question.author]\r\n    return {\r\n       author,\r\n       question,\r\n       authedUser\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(QuestionCard);"]},"metadata":{},"sourceType":"module"}