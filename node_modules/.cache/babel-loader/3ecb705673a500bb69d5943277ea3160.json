{"ast":null,"code":"var _jsxFileName = \"D:\\\\FWD\\\\would-you\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { Image, Badge, Col, Row, Button } from \"react-bootstrap\";\nimport { Card } from \"react-bootstrap/cjs\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.test = (e, id) => {\n      e.preventDefault();\n      this.props.history.push({\n        pathname: `/questions/${id}`\n      });\n    };\n  }\n\n  render() {\n    const {\n      question,\n      author,\n      id\n    } = this.props;\n    const {\n      optionOne,\n      optionTwo\n    } = question;\n    const {\n      name,\n      avatarURL\n    } = author;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 3,\n        className: \"g-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card bg-secondary text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"card-title\",\n              children: name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Image, {\n              style: {\n                width: \"75px\",\n                height: \"130px\",\n                backgrounColor: \"#fff\"\n              },\n              rounded: true,\n              src: avatarURL !== \"undefined\" ? avatarURL : \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            style: {\n              padding: \"15px\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title\",\n              style: {\n                fontSize: \"25px\",\n                fontWeight: \"bold\"\n              },\n              children: [\"Would you rather \", /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"secondary\",\n                children: \"!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 36\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body text-muted\",\n              children: optionOne.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(Badge, {\n                bg: \"dark\",\n                style: {\n                  borderRadius: \"50%\"\n                },\n                children: \"OR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body text-muted\",\n              children: optionTwo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"dark\",\n              onClick: e => this.test(e, id),\n              children: /*#__PURE__*/_jsxDEV(Card.Link, {\n                to: `/questions/${id}`,\n                style: {\n                  color: \"#fff\",\n                  textDecoration: \"none\"\n                },\n                children: [\" \", \"Open\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  users,\n  authedUser\n}, {\n  id\n}) {\n  const question = questions[id];\n  const author = users[question.author];\n  return {\n    author,\n    question,\n    authedUser\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(QuestionCard));","map":{"version":3,"sources":["D:/FWD/would-you/src/components/QuestionCard.js"],"names":["React","Component","Fragment","Image","Badge","Col","Row","Button","Card","connect","withRouter","QuestionCard","test","e","id","preventDefault","props","history","push","pathname","render","question","author","optionOne","optionTwo","name","avatarURL","width","height","backgrounColor","padding","fontSize","fontWeight","text","borderRadius","color","textDecoration","mapStateToProps","questions","users","authedUser"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { Image, Badge, Col, Row, Button } from \"react-bootstrap\";\r\nimport { Card } from \"react-bootstrap/cjs\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nclass QuestionCard extends Component {\r\n  test = (e, id) => {\r\n    e.preventDefault();\r\n    this.props.history.push({ pathname: `/questions/${id}` });\r\n  };\r\n  render() {\r\n    const { question, author, id } = this.props;\r\n    const { optionOne, optionTwo } = question;\r\n    const { name, avatarURL } = author;\r\n    return (\r\n      <Fragment>\r\n        <Row xs={1} md={3} className=\"g-4\">\r\n          <div className=\"col col-md-4\">\r\n            <div className=\"card bg-secondary text-white\">\r\n              <h3 className=\"card-title\">{name}</h3>\r\n              <Image\r\n                style={{\r\n                  width: \"75px\",\r\n                  height: \"130px\",\r\n                  backgrounColor: \"#fff\",\r\n                }}\r\n                rounded\r\n                src={avatarURL !== \"undefined\" ? avatarURL : \"logo\"}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"col col-md-4\">\r\n            {\r\n              <div className=\"card\" style={{ padding: \"15px\" }}>\r\n                <h2\r\n                  className=\"card-title\"\r\n                  style={{ fontSize: \"25px\", fontWeight: \"bold\" }}\r\n                >\r\n                  Would you rather <Badge bg=\"secondary\">!</Badge>\r\n                </h2>\r\n                <div className=\"card-body text-muted\">{optionOne.text}</div>\r\n                <div>\r\n                  <Badge bg=\"dark\" style={{ borderRadius: \"50%\" }}>\r\n                    OR\r\n                  </Badge>\r\n                </div>\r\n                <div className=\"card-body text-muted\">{optionTwo.text}</div>\r\n                <Button variant=\"dark\" onClick={(e) => this.test(e, id)}>\r\n                  <Card.Link\r\n                    to={`/questions/${id}`}\r\n                    style={{ color: \"#fff\", textDecoration: \"none\" }}\r\n                  >\r\n                    {\" \"}\r\n                    Open\r\n                  </Card.Link>\r\n                </Button>\r\n              </div>\r\n            }\r\n          </div>\r\n        </Row>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps({ questions, users, authedUser }, { id }) {\r\n  const question = questions[id];\r\n  const author = users[question.author];\r\n  return {\r\n    author,\r\n    question,\r\n    authedUser,\r\n  };\r\n}\r\nexport default withRouter(connect(mapStateToProps)(QuestionCard));\r\n"]},"metadata":{},"sourceType":"module"}